// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/morvanzhou/unittest-demo/5mock (interfaces: MyInterface)

// Package _mock is a generated GoMock package.
package _mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMyInterface is a mock of MyInterface interface
type MockMyInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMyInterfaceMockRecorder
}

// MockMyInterfaceMockRecorder is the mock recorder for MockMyInterface
type MockMyInterfaceMockRecorder struct {
	mock *MockMyInterface
}

// NewMockMyInterface creates a new mock instance
func NewMockMyInterface(ctrl *gomock.Controller) *MockMyInterface {
	mock := &MockMyInterface{ctrl: ctrl}
	mock.recorder = &MockMyInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMyInterface) EXPECT() *MockMyInterfaceMockRecorder {
	return m.recorder
}

// MyInterFunc mocks base method
func (m *MockMyInterface) MyInterFunc(arg0 int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MyInterFunc", arg0)
	ret0, _ := ret[0].(int)
	return ret0
}

// MyInterFunc indicates an expected call of MyInterFunc
func (mr *MockMyInterfaceMockRecorder) MyInterFunc(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MyInterFunc", reflect.TypeOf((*MockMyInterface)(nil).MyInterFunc), arg0)
}
